@using UltraSoundWeb.Entities

@model UltraSoundResultVM;

@{
    Layout = "~/Views/Shared/_Layout.cshtml";
    ViewData["Title"] = "Thêm mới kết quả";
    var samples = (List<UltraSoundSample>)ViewData["samples"];
    var patients = (List<Patient>)ViewData["patients"];
    var doctorUltrasounds = (List<Doctor>)ViewData["doctorUltrasounds"];
    var doctorSpecifys = (List<Doctor>)ViewData["doctorSpecifys"];
}
<a href="/ultrasoundresults" class="btn btn-outline-danger mb-3">Quay lại</a>
<form class="user" action="create" method="post" enctype="multipart/form-data">
        <div class="row">
            <div class="col-5">
                <div class="form-group ">

                    <p>Chọn hình ảnh siêu âm</p>
                    <input name="ResultImages" type="file" multiple id="ResultImages" required/>
                    <hr />
                    <div id="dvPreview" class="d-flex">
                    </div>

                    <p>Ngày khám</p>
                    <input asp-for="@Model.Date" class="form-control form-control-user mb-3"
                           required type="date" />
                    <p>Số phiếu</p>
                    <input asp-for="@Model.No" class="form-control form-control-user mb-3"
                           required placeholder="Số phiếu" />

                    <p>Bệnh nhân</p>
                    <select asp-for="@Model.PatientId" onchange="selectedPatientValue(this)" class="form-control mb-3" required>
                        <option value="0">Thêm bệnh nhân</option>
                        @foreach (var d in patients)
                        {
                            <option value="@d.Id">@d.Name</option>
                        }
                    </select>
                    <div>
                        <input style="display:none;" name="Patient.Id" id="patientId" type="hidden" value="0"/>
                        <input name="Patient.IdentityNumber" id="identityPatientId" type="hidden" />
                        <div class="form-group">
                            <label class="control-label col-md-3">Họ tên: </label>
                            <input id="hoten" name="Patient.Name" class="form-control form-control-user mb-3"
                                   required />
                            @* <span id="hoten">@patients[0].Name</span> *@
                        </div>
                        <div class="form-group">
                            <label class="control-label col-md-3">Giới tính: </label>
                            <input id="gioitinh" name="Patient.Gender" class="form-control form-control-user mb-3"
                               required />
                            @* <span id="gioitinh">@patients[0].Gender</span> *@
                        </div>
                        <div class="form-group">
                            <label class="control-label col-md-3">Năm sinh: </label>
                            <input id="namsinh" name="Patient.BirthYear" class="form-control form-control-user mb-3" type="number"
                                   required />
                            @* <span id="namsinh">@patients[0].BirthYear</span> *@
                        </div>
                        @* <div class="form-group">
                            <label class="control-label col-md-3">Tuổi: </label>
                            @{
                                var t = DateTime.Now.Year - patients[0].BirthYear;
                            }
                            <span id="tuoi">@t</span>
                        </div> *@
                        <div class="form-group">
                            <label class="control-label col-md-3">Địa chỉ: </label>
                            <input id="diachi" name="Patient.Address" class="form-control form-control-user mb-3"
                                   required />
                            @* <span id="diachi"> @patients[0].Address</span> *@
                        </div>
                        <div class="form-group">
                            <label class="control-label col-md-3">Số điện thoại: </label>
                            <input id="sdt" name="Patient.PhoneNumber"  class="form-control form-control-user mb-3"
                                   required />
                        </div>
                        <div class="form-group">
                            <label class="control-label col-md-3">BHYT: </label>
                            <input id="bhyt" name="Patient.InsuranceNumber"  class="form-control form-control-user mb-3" />
                        </div>
                    </div>
                    <p>Mẫu kết quả</p>
                    <select asp-for="@Model.UltraSoundSampleId" onchange="selectedSampleValue(this)" class="form-control mb-3" required>
                        @foreach (var sample in samples)
                        {
                            <option value="@sample.Id">@sample.SampleName</option>
                        }
                    </select>
                    <p>Bác sĩ siêu âm</p>
                    <select asp-for="@Model.DoctorUltraSoundId" class="form-control mb-3" required>
                        @foreach (var d in doctorUltrasounds)
                        {
                            <option value="@d.Id">@d.Name</option>
                        }
                    </select>
                    <p>Bác sĩ chỉ định</p>
                    <select asp-for="@Model.DoctorSpecifyId" class="form-control mb-3" required>
                        @foreach (var d in doctorSpecifys)
                        {
                            <option value="@d.Id">@d.Name</option>
                        }
                    </select>
                </div>
            </div>
            <div class="col-7">
                <div class="form-group">

                    <p>Chuẩn đoán</p>
                    <input asp-for="@Model.Diagnosis" id="diagnosis" class="form-control form-control-user mb-3"
                           required placeholder="Chuẩn đoán" value="@samples[0].DefaultDiagnostic"/>

                    <p>Đề nghị</p>
                    <input asp-for="@Model.Recommendation" id="recommendation" class="form-control form-control-user mb-3"
                            required placeholder="Đề nghị" value="@samples[0].DefaultRecommendation" />

                    <p>Mô tả kết quả</p>
                    <style>
                        .container {
                            width: 100%;
                            margin: 20px auto;
                        }

                    </style>
                    <div class="container">
                        <textarea class="ckeditor" cols="80" id="editor" name="ResultDescription" required rows="100">@samples[0].ResultDescription</textarea>
                    </div>

                    <p>Kết luận</p>
                    <div class="container">
                        <textarea class="ckeditor" cols="80" id="editor1" name="Conclusion" required rows="10">@samples[0].DefaultConclusion</textarea>
                    </div>
                </div>
            </div>
        </div>
    <div class="mt-3 w-25 d-flex justify-content-center">
        <button type="submit" class="btn btn-primary btn-user btn-block">
            Tạo mới
        </button>
    </div>
</form>
@section Scripts {
    <script>
        let obj = {
            // https://ckeditor.com/docs/ckeditor5/latest/features/toolbar/toolbar.html#extended-toolbar-configuration-format
            toolbar: {
                items: [
                    'exportPDF', 'exportWord', '|',
                    'findAndReplace', 'selectAll', '|',
                    'heading', '|',
                    'bold', 'italic', 'strikethrough', 'underline', 'code', 'subscript', 'superscript', 'removeFormat', '|',
                    'bulletedList', 'numberedList', 'todoList', '|',
                    'outdent', 'indent', '|',
                    'undo', 'redo',
                    '-',
                    'fontSize', 'fontFamily', 'fontColor', 'fontBackgroundColor', 'highlight', '|',
                    'alignment', '|',
                    'link', 'insertImage', 'blockQuote', 'insertTable', 'mediaEmbed', 'codeBlock', 'htmlEmbed', '|',
                    'specialCharacters', 'horizontalLine', 'pageBreak', '|',
                    'textPartLanguage', '|',
                    'sourceEditing'
                ],
                shouldNotGroupWhenFull: true
            },
            // Changing the language of the interface requires loading the language file using the <script> tag.
            // language: 'es',
            list: {
                properties: {
                    styles: true,
                    startIndex: true,
                    reversed: true
                }
            },
            // https://ckeditor.com/docs/ckeditor5/latest/features/headings.html#configuration
            heading: {
                options: [
                    { model: 'paragraph', title: 'Paragraph', class: 'ck-heading_paragraph' },
                    { model: 'heading1', view: 'h1', title: 'Heading 1', class: 'ck-heading_heading1' },
                    { model: 'heading2', view: 'h2', title: 'Heading 2', class: 'ck-heading_heading2' },
                    { model: 'heading3', view: 'h3', title: 'Heading 3', class: 'ck-heading_heading3' },
                    { model: 'heading4', view: 'h4', title: 'Heading 4', class: 'ck-heading_heading4' },
                    { model: 'heading5', view: 'h5', title: 'Heading 5', class: 'ck-heading_heading5' },
                    { model: 'heading6', view: 'h6', title: 'Heading 6', class: 'ck-heading_heading6' }
                ]
            },
            // https://ckeditor.com/docs/ckeditor5/latest/features/editor-placeholder.html#using-the-editor-configuration
            placeholder: '',
            // https://ckeditor.com/docs/ckeditor5/latest/features/font.html#configuring-the-font-family-feature
            fontFamily: {
                options: [
                    'default',
                    'Arial, Helvetica, sans-serif',
                    'Courier New, Courier, monospace',
                    'Georgia, serif',
                    'Lucida Sans Unicode, Lucida Grande, sans-serif',
                    'Tahoma, Geneva, sans-serif',
                    'Times New Roman, Times, serif',
                    'Trebuchet MS, Helvetica, sans-serif',
                    'Verdana, Geneva, sans-serif'
                ],
                supportAllValues: true
            },
            // https://ckeditor.com/docs/ckeditor5/latest/features/font.html#configuring-the-font-size-feature
            fontSize: {
                options: [10, 12, 14, 'default', 18, 20, 22],
                supportAllValues: true
            },
            // Be careful with the setting below. It instructs CKEditor to accept ALL HTML markup.
            // https://ckeditor.com/docs/ckeditor5/latest/features/general-html-support.html#enabling-all-html-features
            htmlSupport: {
                allow: [
                    {
                        name: /.*/,
                        attributes: true,
                        classes: true,
                        styles: true
                    }
                ]
            },
            // Be careful with enabling previews
            // https://ckeditor.com/docs/ckeditor5/latest/features/html-embed.html#content-previews
            htmlEmbed: {
                showPreviews: true
            },
            // https://ckeditor.com/docs/ckeditor5/latest/features/link.html#custom-link-attributes-decorators
            link: {
                decorators: {
                    addTargetToExternalLinks: true,
                    defaultProtocol: 'https://',
                    toggleDownloadable: {
                        mode: 'manual',
                        label: 'Downloadable',
                        attributes: {
                            download: 'file'
                        }
                    }
                }
            },
            // https://ckeditor.com/docs/ckeditor5/latest/features/mentions.html#configuration
            mention: {
                feeds: [
                    {
                        marker: '@@',
                        feed: [
                            '@@apple', '@@bears', '@@brownie', '@@cake', '@@cake', '@@candy', '@@canes', '@@chocolate', '@@cookie', '@@cotton', '@@cream',
                            '@@cupcake', '@@danish', '@@donut', '@@dragée', '@@fruitcake', '@@gingerbread', '@@gummi', '@@ice', '@@jelly-o',
                            '@@liquorice', '@@macaroon', '@@marzipan', '@@oat', '@@pie', '@@plum', '@@pudding', '@@sesame', '@@snaps', '@@soufflé',
                            '@@sugar', '@@sweet', '@@topping', '@@wafer'
                        ],
                        minimumCharacters: 1
                    }
                ]
            },
            // The "super-build" contains more premium features that require additional configuration, disable them below.
            // Do not turn them on unless you read the documentation and know how to configure them and setup the editor.
            removePlugins: [
                // These two are commercial, but you can try them out without registering to a trial.
                // 'ExportPdf',
                // 'ExportWord',
                'AIAssistant',
                'CKBox',
                'CKFinder',
                'EasyImage',
                // This sample uses the Base64UploadAdapter to handle image uploads as it requires no configuration.
                // https://ckeditor.com/docs/ckeditor5/latest/features/images/image-upload/base64-upload-adapter.html
                // Storing images as Base64 is usually a very bad idea.
                // Replace it on production website with other solutions:
                // https://ckeditor.com/docs/ckeditor5/latest/features/images/image-upload/image-upload.html
                // 'Base64UploadAdapter',
                'RealTimeCollaborativeComments',
                'RealTimeCollaborativeTrackChanges',
                'RealTimeCollaborativeRevisionHistory',
                'PresenceList',
                'Comments',
                'TrackChanges',
                'TrackChangesData',
                'RevisionHistory',
                'Pagination',
                'WProofreader',
                // Careful, with the Mathtype plugin CKEditor will not load when loading this sample
                // from a local file system (file://) - load this site via HTTP server if you enable MathType.
                'MathType',
                // The following features are part of the Productivity Pack and require additional license.
                'SlashCommand',
                'Template',
                'DocumentOutline',
                'FormatPainter',
                'TableOfContents',
                'PasteFromOfficeEnhanced'
            ]
        }
        var editor;
        var editor1;
        CKEDITOR.ClassicEditor.create(document.getElementById("editor"), obj)
        .then(newEditor => {
            editor = newEditor;
        })
        .catch(error => {
            console.error(error);
        });

        CKEDITOR.ClassicEditor.create(document.getElementById("editor1"), obj)
        .then(newEditor => {
            editor1 = newEditor;
        })
        .catch(error => {
            console.error(error);
        });

    </script>
    <script>
        function selectedPatientValue(ddlObject) {
            var id = ddlObject.value;
            if (id == 0) {

                $("#patientId").css("display", "none");
                $("#identityPatientId").val('');
                $("#hoten").val('');
                $("#gioitinh").val('');
                $("#namsinh").val('');
                $("#diachi").val('');
                $("#sdt").val('');
                $("#bhyt").val('');
                return;
            }
            var obj = @Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(ViewData["patients"],
                    new Newtonsoft.Json.JsonSerializerSettings
                    {
                        ReferenceLoopHandling = Newtonsoft.Json.ReferenceLoopHandling.Ignore
                    }
                )
            );

            var benhnhan = obj.find(x => x.Id == id);

            $("#patientId").css("display", "block");
            $("#patientId").val(benhnhan.Id);
            $("#identityPatientId").val(benhnhan.IdentityNumber);
            $("#hoten").val(benhnhan.Name);
            $("#gioitinh").val(benhnhan.Gender);
            // $("#tuoi").text(new Date().getFullYear() - parseInt(benhnhan.BirthYear));
            $("#namsinh").val(benhnhan.BirthYear);
            $("#diachi").val(benhnhan.Address);
            $("#sdt").val(benhnhan.PhoneNumber);
            $("#bhyt").val(benhnhan.InsuranceNumber);
        }
        function selectedSampleValue(ddlObject) {
            var id = ddlObject.value;
            console.log(id)
            var obj = @Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(ViewData["samples"],
                    new Newtonsoft.Json.JsonSerializerSettings
                    {
                        ReferenceLoopHandling = Newtonsoft.Json.ReferenceLoopHandling.Ignore
                    }
               )
           );

            var sample = obj.find(x => x.Id == id);

            $("#diagnosis").val(sample.DefaultDiagnostic);
            $("#recommendation").val(sample.DefaultRecommendation || '');
            editor.setData(sample.ResultDescription);
            editor1.setData(sample.DefaultConclusion);
        }
    </script>
    <script>
        $(function () {
            $("[id*=ResultImages]").change(function () {
                if (typeof (FileReader) != "undefined") {
                    var dvPreview = $("#dvPreview");
                    dvPreview.html("");
                    var regex = /^([a-zA-Z0-9\s_\\.\-:])+(.jpg|.jpeg|.gif|.png|.bmp)$/;
                    var files = Array.from($(this)[0].files);
                    const dt = new DataTransfer()
                    $($(this)[0].files).each(function () {
                        var file = $(this);
                        dt.items.add(file[0])
                    })
                    $($(this)[0].files).each(function () {
                        var file = $(this);
                        if (regex.test(file[0].name.toLowerCase())) {
                            var reader = new FileReader();
                            reader.onload = function (e) {
                                var img = $("<img />");
                                img.attr("style", "height:100px;width: 100px");
                                img.attr("src", e.target.result);

                                var div = $("<div></div>");
                                div.attr("style", "margin-right:1rem; display:flex; flex-direction: column; align-items:center;");
                                div.append(img);

                                var close = $("<div class='btn btn-danger' style='width: 50%;margin-top:4px;'>X</div>");
                                div.append(close)
                                close.click(function () {
                                    $(this).parent().remove();

                                    var index = files.indexOf(file[0]); 
                                    if (index > -1) {
                                        dt.items.remove(index)
                                        document.getElementById('ResultImages').files = dt.files;
                                    }
                                });
                                dvPreview.append(div);
                            }
                            reader.readAsDataURL(file[0]);
                        } else {
                            alert(file[0].name + " is not a valid image file.");
                            dvPreview.html("");
                            return false;
                        }
                    });
                } else {
                    alert("This browser does not support HTML5 FileReader.");
                }
            });
        });
    </script>
}